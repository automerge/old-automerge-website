"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2256],{5293:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome to Automerge","href":"/docs/hello","docId":"hello","unlisted":false},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Setup","href":"/docs/tutorial/setup","docId":"tutorial/setup","unlisted":false},{"type":"link","label":"Core Concepts","href":"/docs/tutorial/concepts","docId":"tutorial/concepts","unlisted":false},{"type":"link","label":"Local Storage & Sync","href":"/docs/tutorial/local-sync","docId":"tutorial/local-sync","unlisted":false},{"type":"link","label":"Load documents by URL","href":"/docs/tutorial/load_by_url","docId":"tutorial/load_by_url","unlisted":false},{"type":"link","label":"React Integration","href":"/docs/tutorial/react","docId":"tutorial/react","unlisted":false},{"type":"link","label":"Network Sync","href":"/docs/tutorial/network-sync","docId":"tutorial/network-sync","unlisted":false},{"type":"link","label":"Multiple Task Lists","href":"/docs/tutorial/multiple-task-lists","docId":"tutorial/multiple-task-lists","unlisted":false},{"type":"link","label":"Persisting the Root Document","href":"/docs/tutorial/persist-root-doc","docId":"tutorial/persist-root-doc","unlisted":false},{"type":"link","label":"Multi Device Root Document","href":"/docs/tutorial/multi-device-root-doc","docId":"tutorial/multi-device-root-doc","unlisted":false},{"type":"link","label":"Next Steps","href":"/docs/tutorial/next-steps","docId":"tutorial/next-steps","unlisted":false}],"href":"/docs/tutorial/"},{"type":"link","label":"Migrating from Automerge 2 to Automerge 3","href":"/docs/migrating-from-automerge-2-to-automerge-3","docId":"migrating-from-automerge-2-to-automerge-3","unlisted":false},{"type":"link","label":"Using Automerge with LLMs","href":"/docs/using-automerge-with-llms","docId":"using-automerge-with-llms","unlisted":false},{"type":"category","label":"Cookbook","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Modeling Data","href":"/docs/cookbook/modeling-data","docId":"cookbook/modeling-data","unlisted":false},{"type":"link","label":"Prosemirror + React + Automerge","href":"/docs/cookbook/rich-text-prosemirror-react","docId":"cookbook/rich-text-prosemirror-react","unlisted":false},{"type":"link","label":"Prosemirror + VanillaJS + Automerge","href":"/docs/cookbook/rich-text-prosemirror-vanilla","docId":"cookbook/rich-text-prosemirror-vanilla","unlisted":false}]},{"type":"category","label":"Reference","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Concepts","href":"/docs/reference/concepts","docId":"reference/concepts","unlisted":false},{"type":"link","label":"Library Initialization","href":"/docs/reference/library_initialization","docId":"reference/library_initialization","unlisted":false},{"type":"link","label":"The JavaScript packages","href":"/docs/reference/the_js_packages","docId":"reference/the_js_packages","unlisted":false},{"type":"category","label":"Documents","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Simple Values","href":"/docs/reference/documents/values","docId":"reference/documents/values","unlisted":false},{"type":"link","label":"Counters","href":"/docs/reference/documents/counters","docId":"reference/documents/counters","unlisted":false},{"type":"link","label":"Lists","href":"/docs/reference/documents/lists","docId":"reference/documents/lists","unlisted":false},{"type":"link","label":"Text","href":"/docs/reference/documents/text","docId":"reference/documents/text","unlisted":false},{"type":"link","label":"Rich Text","href":"/docs/reference/documents/rich_text","docId":"reference/documents/rich_text","unlisted":false},{"type":"link","label":"Conflicts","href":"/docs/reference/documents/conflicts","docId":"reference/documents/conflicts","unlisted":false}],"href":"/docs/reference/documents/"},{"type":"category","label":"Repositories","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Storage","href":"/docs/reference/repositories/storage","docId":"reference/repositories/storage","unlisted":false},{"type":"link","label":"Networking","href":"/docs/reference/repositories/networking","docId":"reference/repositories/networking","unlisted":false},{"type":"link","label":"DocHandles","href":"/docs/reference/repositories/dochandles","docId":"reference/repositories/dochandles","unlisted":false},{"type":"link","label":"Ephemeral Data","href":"/docs/reference/repositories/ephemeral","docId":"reference/repositories/ephemeral","unlisted":false}],"href":"/docs/reference/repositories/"},{"type":"category","label":"Under the hood","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Storage","href":"/docs/reference/under-the-hood/storage","docId":"reference/under-the-hood/storage","unlisted":false},{"type":"link","label":"Merge Rules","href":"/docs/reference/under-the-hood/merge_rules","docId":"reference/under-the-hood/merge_rules","unlisted":false},{"type":"link","label":"Rich Text Schema","href":"/docs/reference/under-the-hood/rich_text_schema","docId":"reference/under-the-hood/rich_text_schema","unlisted":false}]},{"type":"link","label":"API Docs","href":"/docs/reference/api","docId":"reference/api","unlisted":false},{"type":"link","label":"Glossary","href":"/docs/reference/glossary","docId":"reference/glossary","unlisted":false}]}]},"docs":{"cookbook/modeling-data":{"id":"cookbook/modeling-data","title":"Modeling Data","description":"All data in Automerge must be stored in a document. A document can be modeled in a variety of ways, and there are many design patterns that can be used. An application could have many documents, typically identified by a UUID.","sidebar":"tutorialSidebar"},"cookbook/rich-text-prosemirror-react":{"id":"cookbook/rich-text-prosemirror-react","title":"Prosemirror + React + Automerge","description":"Automerge supports rich text editing on top of ProseMirror. This guide will show you how to set up a simple collaborative rich text editor in React using Automerge and ProseMirror.","sidebar":"tutorialSidebar"},"cookbook/rich-text-prosemirror-vanilla":{"id":"cookbook/rich-text-prosemirror-vanilla","title":"Prosemirror + VanillaJS + Automerge","description":"Automerge supports rich text using ProseMirror. This guide will show you how to set up a simple collaborative rich text editor in a vanilla JS app; where \\"vanilla\\" means plain JavaScript without any frameworks or libraries.","sidebar":"tutorialSidebar"},"hello":{"id":"hello","title":"Welcome to Automerge","description":"Automerge is a library of data structures for building collaborative","sidebar":"tutorialSidebar"},"migrating-from-automerge-2-to-automerge-3":{"id":"migrating-from-automerge-2-to-automerge-3","title":"Migrating from Automerge 2 to Automerge 3","description":"Automerge 3 is a major update to the Automerge library which enormously reduces memory usage and in many cases improves performance. It is however, almost entirely backwards compatible with Automerge 2. The main difference is that we have deprecated the old Text based API for collaborative string.","sidebar":"tutorialSidebar"},"reference/api":{"id":"reference/api","title":"API Docs","description":"- @automerge/automerge","sidebar":"tutorialSidebar"},"reference/concepts":{"id":"reference/concepts","title":"Concepts","description":"This documentation is mostly focused on the javascript implementation of automerge. Some things will translate to other languages but some things - in particular the \\"repository\\" concept and automerge-repo library - will not.","sidebar":"tutorialSidebar"},"reference/documents/conflicts":{"id":"reference/documents/conflicts","title":"Conflicts","description":"Automerge allows different nodes to independently make arbitrary changes to their respective copies","sidebar":"tutorialSidebar"},"reference/documents/counters":{"id":"reference/documents/counters","title":"Counters","description":"If you have a numeric value that is only ever changed by adding or subtracting (e.g. counting how","sidebar":"tutorialSidebar"},"reference/documents/index":{"id":"reference/documents/index","title":"Document Data Model","description":"Automerge documents are quite similar to JSON objects. A document always consists of a root map which is a map from strings to other automerge values, which can themselves be composite types.","sidebar":"tutorialSidebar"},"reference/documents/lists":{"id":"reference/documents/lists","title":"Lists","description":"JavaScript Arrays are fully supported in Automerge. You can use push, unshift, insertAt, deleteAt, splice, loops, and nested objects.","sidebar":"tutorialSidebar"},"reference/documents/rich_text":{"id":"reference/documents/rich_text","title":"Rich Text","description":"As well as supporting plain text Automerge supports rich text editing. The rich text APIs are extensions of the plain text API. In addition to using splice and updateText to modify a string, we also provide functions to manipulate two extra data types which are associated with a string:","sidebar":"tutorialSidebar"},"reference/documents/text":{"id":"reference/documents/text","title":"Text","description":"Automerge provides support for collaborative text editing. Under the hood, whenever you create a string in Automerge you are creating a collaborative text object which supports merging concurrent changes to the string.","sidebar":"tutorialSidebar"},"reference/documents/values":{"id":"reference/documents/values","title":"Simple Values","description":"All JSON primitive datatypes are supported in an Automerge document. In addition, JavaScript Date objects are supported.","sidebar":"tutorialSidebar"},"reference/glossary":{"id":"reference/glossary","title":"Glossary","description":"CRDTs","sidebar":"tutorialSidebar"},"reference/library_initialization":{"id":"reference/library_initialization","title":"Library Initialization","description":"Automerge is implemented in Rust and compiled to WebAssembly for use in javascript environments. Unfortunately the way that WebAssembly modules are loaded varies across environments. In some situations this can be handled by your build tool, but in others you may need to manually load the module. This page describes how to load automerge in various environments, and also an escape hatch which should work everywhere.","sidebar":"tutorialSidebar"},"reference/repositories/dochandles":{"id":"reference/repositories/dochandles","title":"DocHandles","description":"Once you have a Repo with a NetworkAdapter and a StorageAdapter you can get down to the business of creating and working with DocHandles.","sidebar":"tutorialSidebar"},"reference/repositories/ephemeral":{"id":"reference/repositories/ephemeral","title":"Ephemeral Data","description":"Automerge encourages you to persist most of your application state. Sometimes however there is state which it doesn\'t make any sense to persist. Good reasons to not persist state are if it changes extremely fast, or is only useful to the user in the context of a live \\"session\\" of some kind. One example of such data is cursor positions in collaboratively edited text. We refer to this kind of data as \\"ephemeral data\\".","sidebar":"tutorialSidebar"},"reference/repositories/index":{"id":"reference/repositories/index","title":"Repositories","description":"@automerge/automerge provides a JSON-like CRDT and a sync protocol, but this still leaves a lot of plumbing to do to use it in an application. @automerge/automerge-repo is that plumbing.","sidebar":"tutorialSidebar"},"reference/repositories/networking":{"id":"reference/repositories/networking","title":"Networking","description":"There are many ways to talk to other peers. In automerge-repo this is captured by the NetworkAdapter interface. Unlike StorageAdapters a repository can have many (or zero) NetworkAdapters.","sidebar":"tutorialSidebar"},"reference/repositories/storage":{"id":"reference/repositories/storage","title":"Storage","description":"In automerge-repo \\"storage\\" refers to any implementation of StorageAdapter. You can_ run a Repo without a StorageAdapter but it will be entirely transient and will have to load all its data from remote peers on every restart.","sidebar":"tutorialSidebar"},"reference/the_js_packages":{"id":"reference/the_js_packages","title":"The JavaScript packages","description":"The javascript API has been through several iterations and is currently split over a few libraries. In greenfield applications, here\'s how the library is intended to be used:","sidebar":"tutorialSidebar"},"reference/under-the-hood/merge_rules":{"id":"reference/under-the-hood/merge_rules","title":"Merge Rules","description":"It isn\'t important to understand this section to use automerge. You can just let automerge handle merging for you. But it may be interesting to understand.","sidebar":"tutorialSidebar"},"reference/under-the-hood/rich_text_schema":{"id":"reference/under-the-hood/rich_text_schema","title":"Rich Text Schema","description":"The rich text API provides a set of primitives for annotating a sequence of characters with formatting information. The two primitives in question are","sidebar":"tutorialSidebar"},"reference/under-the-hood/storage":{"id":"reference/under-the-hood/storage","title":"Storage","description":"In the tutorial section we introduced a simple task list which synchronizes a todo list between any number of tabs. If you close all the tabs and open a new one you will see that the value of the todo list is persisted. How is this working? What\'s going on?","sidebar":"tutorialSidebar"},"tutorial/concepts":{"id":"tutorial/concepts","title":"Core Concepts","description":"Architecture of an Automerge App","sidebar":"tutorialSidebar"},"tutorial/index":{"id":"tutorial/index","title":"Tutorial: An Automerge todo list","description":"Automerge is a suite of tools for building local-first web applications with real-time synchronization that works on and offline.","sidebar":"tutorialSidebar"},"tutorial/load_by_url":{"id":"tutorial/load_by_url","title":"Load documents by URL","description":"We\'ve learned to create documents in the browser console using Repo.create and look them up by using Repo.find. But this is not a user interface. On the web we really want to be able to share links with each other, not munge around in the browser console. We\'re now going to introduce a simple trick for loading documents by URL which is great for prototyping - storing the document URL in the browser\'s location hash.","sidebar":"tutorialSidebar"},"tutorial/local-sync":{"id":"tutorial/local-sync","title":"Local Storage & Sync","description":"Storage & Network Adapters","sidebar":"tutorialSidebar"},"tutorial/multi-device-root-doc":{"id":"tutorial/multi-device-root-doc","title":"Multi Device Root Document","description":"Syncing Across Devices","sidebar":"tutorialSidebar"},"tutorial/multiple-task-lists":{"id":"tutorial/multiple-task-lists","title":"Multiple Task Lists","description":"You might have noticed that if you lose the URL of a task list, it\'s gone forever. This is fine for testing and demos, but obviously no good for a real application.","sidebar":"tutorialSidebar"},"tutorial/network-sync":{"id":"tutorial/network-sync","title":"Network Sync","description":"Collaborating over the internet","sidebar":"tutorialSidebar"},"tutorial/next-steps":{"id":"tutorial/next-steps","title":"Next Steps","description":"Congratulations!","sidebar":"tutorialSidebar"},"tutorial/persist-root-doc":{"id":"tutorial/persist-root-doc","title":"Persisting the Root Document","description":"Keeping Track of the Root Document","sidebar":"tutorialSidebar"},"tutorial/react":{"id":"tutorial/react","title":"React Integration","description":"Repos in React: RepoContext","sidebar":"tutorialSidebar"},"tutorial/setup":{"id":"tutorial/setup","title":"Setup","description":"Setup","sidebar":"tutorialSidebar"},"using-automerge-with-llms":{"id":"using-automerge-with-llms","title":"Using Automerge with LLMs","description":"We support the llms.txt standard for making documentation available to large language models.","sidebar":"tutorialSidebar"}}}}')}}]);