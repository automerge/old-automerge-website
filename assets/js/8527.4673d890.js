"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8527],{772:(e,t,r)=>{r.d(t,{y4:()=>b,Uo:()=>m});var s=r(556);r(182);s.iw;var o=r(413);o.b;o.b;var n=r(4734);n("automerge-repo:messagechannel");s.iw;var i=null;"undefined"!=typeof WebSocket?i=WebSocket:"undefined"!=typeof MozWebSocket?i=MozWebSocket:void 0!==r.g?i=r.g.WebSocket||r.g.MozWebSocket:"undefined"!=typeof window?i=window.WebSocket||window.MozWebSocket:"undefined"!=typeof self&&(i=self.WebSocket||self.MozWebSocket);const a=i,d="1";function c(e,t="Assertion failed"){if(!1===e||null==e){const e=new Error(h(t));throw e.stack=l(e.stack,"assert.ts"),e}}const h=e=>e.split("\n").map((e=>e.trim())).join("\n"),l=(e="",t)=>e.split("\n").filter((e=>!e.includes(t))).join("\n"),y=e=>{const{buffer:t,byteOffset:r,byteLength:s}=e;return t.slice(r,r+s)};class p extends s.iw{socket}class m extends p{url;retryInterval;#e=!1;#t;#r=new Promise((e=>{this.#t=e}));isReady(){return this.#e}whenReady(){return this.#r}#s(){this.#e||(this.#e=!0,this.#t?.())}#o;#n=n("automerge-repo:websocket:browser");remotePeerId;constructor(e,t=5e3){super(),this.url=e,this.retryInterval=t,this.#n=this.#n.extend(e)}connect(e,t){this.socket&&this.peerId?(this.#n("reconnecting"),c(e===this.peerId),this.socket.removeEventListener("open",this.onOpen),this.socket.removeEventListener("close",this.onClose),this.socket.removeEventListener("message",this.onMessage),this.socket.removeEventListener("error",this.onError)):(this.#n("connecting"),this.peerId=e,this.peerMetadata=t??{}),this.#o||(this.#o=setInterval((()=>{this.connect(e,t)}),this.retryInterval)),this.socket=new a(this.url),this.socket.binaryType="arraybuffer",this.socket.addEventListener("open",this.onOpen),this.socket.addEventListener("close",this.onClose),this.socket.addEventListener("message",this.onMessage),this.socket.addEventListener("error",this.onError),setTimeout((()=>this.#s()),1e3),this.join()}onOpen=()=>{this.#n("open"),clearInterval(this.#o),this.#o=void 0,this.join()};onClose=()=>{this.#n("close"),this.remotePeerId&&this.emit("peer-disconnected",{peerId:this.remotePeerId}),this.retryInterval>0&&!this.#o&&setTimeout((()=>(c(this.peerId),this.connect(this.peerId,this.peerMetadata))),this.retryInterval)};onMessage=e=>{this.receiveMessage(e.data)};onError=e=>{if("error"in e&&"ECONNREFUSED"!==e.error.code)throw e.error;this.#n("Connection failed, retrying...")};join(){var e,t;c(this.peerId),c(this.socket),this.socket.readyState===a.OPEN&&this.send((e=this.peerId,t=this.peerMetadata,{type:"join",senderId:e,peerMetadata:t,supportedProtocolVersions:[d]}))}disconnect(){c(this.peerId),c(this.socket);const e=this.socket;e&&(e.removeEventListener("open",this.onOpen),e.removeEventListener("close",this.onClose),e.removeEventListener("message",this.onMessage),e.removeEventListener("error",this.onError),e.close()),clearInterval(this.#o),this.remotePeerId&&this.emit("peer-disconnected",{peerId:this.remotePeerId}),this.socket=void 0}send(e){if("data"in e&&0===e.data?.byteLength)throw new Error("Tried to send a zero-length message");if(c(this.peerId),!this.socket)return void this.#n("Tried to send on a disconnected socket.");if(this.socket.readyState!==a.OPEN)throw new Error(`Websocket not ready (${this.socket.readyState})`);const t=s.l6.encode(e);this.socket.send(y(t))}peerCandidate(e,t){c(this.socket),this.#s(),this.remotePeerId=e,this.emit("peer-candidate",{peerId:e,peerMetadata:t})}receiveMessage(e){const t=s.l6.decode(new Uint8Array(e));if(c(this.socket),0===e.byteLength)throw new Error("received a zero-length message");if((e=>"peer"===e.type)(t)){const{peerMetadata:e}=t;this.#n(`peer: ${t.senderId}`),this.peerCandidate(t.senderId,e)}else(e=>"error"===e.type)(t)?this.#n(`error: ${t.message}`):this.emit("message",t)}}n("WebsocketServer");const{encode:v,decode:u}=s.l6;s.iw;class b{database;store;dbPromise;constructor(e="automerge",t="documents"){this.database=e,this.store=t,this.dbPromise=this.createDatabasePromise()}createDatabasePromise(){return new Promise(((e,t)=>{const r=indexedDB.open(this.database,1);r.onerror=()=>{t(r.error)},r.onupgradeneeded=e=>{e.target.result.createObjectStore(this.store)},r.onsuccess=t=>{const r=t.target.result;e(r)}}))}async load(e){const t=(await this.dbPromise).transaction(this.store),r=t.objectStore(this.store).get(e);return new Promise(((e,s)=>{t.onerror=()=>{s(r.error)},r.onsuccess=t=>{const r=t.target.result;e(r&&"object"==typeof r&&"binary"in r?r.binary:void 0)}}))}async save(e,t){const r=(await this.dbPromise).transaction(this.store,"readwrite");return r.objectStore(this.store).put({key:e,binary:t},e),new Promise(((e,t)=>{r.onerror=()=>{t(r.error)},r.oncomplete=()=>{e()}}))}async remove(e){const t=(await this.dbPromise).transaction(this.store,"readwrite");return t.objectStore(this.store).delete(e),new Promise(((e,r)=>{t.onerror=()=>{r(t.error)},t.oncomplete=()=>{e()}}))}async loadRange(e){const t=await this.dbPromise,r=e,s=[...e,"\uffff"],o=IDBKeyRange.bound(r,s),n=t.transaction(this.store),i=n.objectStore(this.store).openCursor(o),a=[];return new Promise(((e,t)=>{n.onerror=()=>{t(i.error)},i.onsuccess=t=>{const r=t.target.result;r?(a.push({data:r.value.binary,key:r.key}),r.continue()):e(a)}}))}async removeRange(e){const t=await this.dbPromise,r=e,s=[...e,"\uffff"],o=IDBKeyRange.bound(r,s),n=t.transaction(this.store,"readwrite");return n.objectStore(this.store).delete(o),new Promise(((e,t)=>{n.onerror=()=>{t(n.error)},n.oncomplete=()=>{e()}}))}}},8527:(e,t,r)=>{r.a(e,(async(e,s)=>{try{r.d(t,{IndexedDBStorageAdapter:()=>n.y4,Repo:()=>o.lc,WebSocketClientAdapter:()=>n.Uo});var o=r(4603),n=r(772),i=e([o]);o=(i.then?(await i)():i)[0],s()}catch(a){s(a)}}))}}]);