"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3402],{675:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"repositories/index","title":"Repositories","description":"@automerge/automerge provides a JSON-like CRDT and a sync protocol, but this still leaves a lot of plumbing to do to use it in an application. @automerge/automerge-repo is that plumbing.","source":"@site/docs/repositories/index.md","sourceDirName":"repositories","slug":"/repositories/","permalink":"/docs/repositories/","draft":false,"unlisted":false,"editUrl":"https://github.com/automerge/automerge.github.io/edit/main/docs/repositories/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Conflicts","permalink":"/docs/documents/conflicts"},"next":{"title":"Storage","permalink":"/docs/repositories/storage"}}');var s=t(4848),n=t(8453);const a={},i="Repositories",c={},d=[];function p(e){const o={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"repositories",children:"Repositories"})}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"@automerge/automerge"})," provides a JSON-like CRDT and a sync protocol, but this still leaves a lot of plumbing to do to use it in an application. ",(0,s.jsx)(o.a,{href:"https://www.npmjs.com/package/@automerge/automerge-repo",children:(0,s.jsx)(o.code,{children:"@automerge/automerge-repo"})})," is that plumbing."]}),"\n",(0,s.jsxs)(o.p,{children:["The entry point for an ",(0,s.jsx)(o.code,{children:"automerge-repo"})," based application is to create a ",(0,s.jsx)(o.a,{href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo.Repo.html",children:(0,s.jsx)(o.code,{children:"Repo"})}),", passing it some form of ",(0,s.jsx)(o.a,{href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo.StorageAdapter.html",children:(0,s.jsx)(o.code,{children:"StorageAdapter"})})," - which knows how to save data locally - and zero or more ",(0,s.jsx)(o.a,{href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo.NetworkAdapter.html",children:(0,s.jsx)(o.code,{children:"NetworkAdapter"})}),"s, which know how to talk to other peers running ",(0,s.jsx)(o.code,{children:"automerge-repo"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["For example, this snippet creates a ",(0,s.jsx)(o.code,{children:"Repo"})," which listens for websocket connections and stores data in the local file system:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-typescript",children:'import { Repo } from "@automerge/automerge-repo";\nimport { WebSocketServer } from "ws";\nimport { NodeWSServerAdapter } from "@automerge/automerge-repo-network-websocket";\nimport { NodeFSStorageAdapter } from "@automerge/automerge-repo-storage-nodefs";\n\nconst wss = new WebSocketServer({ noServer: true });\n\nconst repo = new Repo({\n  network: [new NodeWSServerAdapter(wss)],\n  storage: new NodeFSStorageAdapter(dir),\n});\n'})}),"\n",(0,s.jsxs)(o.p,{children:["A ",(0,s.jsx)(o.code,{children:"Repo"})," is a little like a database. It allows you to create and request ",(0,s.jsx)(o.a,{href:"https://automerge.org/automerge-repo/classes/_automerge_automerge_repo.DocHandle.html",children:(0,s.jsx)(o.code,{children:"DocHandle"})}),"s. Once you have a ",(0,s.jsx)(o.code,{children:"DocHandle"})," you can make changes to it and listen for changes received from other peers."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-typescript",children:'let doc = repo.create();\n// Make a change ourselves and send that to everyone else\ndoc.change((d) => (d.text = "hello world"));\n// Listen for changes from other peers\ndoc.on("change", ({ doc }) => {\n  console.log("new text is ", doc.text);\n});\n'})}),"\n",(0,s.jsx)(o.p,{children:"Any changes you make - or which are received from the network - will be stored in the attached storage adapter and distributed to other peers"})]})}function l(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>a,x:()=>i});var r=t(6540);const s={},n=r.createContext(s);function a(e){const o=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(n.Provider,{value:o},e.children)}}}]);